name: development

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
  release:
    types:
      - created

jobs:
  prepare:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '12'

      - uses: actions/checkout@v2

      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: NPM ci
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

  test:
    needs: prepare
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '12'

      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: NPM ci
        run: npm ci

      - name: lint
        run: npm run lint

      - name: lint:compile
        run: npm run lint:compile

      - name: unit tests
        run: npm run test:coverage

      - name: codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          FLAGS: src
          PROJECT_DIR: ./
        run: bash <(curl -s https://codecov.io/bash) -s $PROJECT_DIR -F $FLAGS -Z

  build:
    needs: test
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '12'

      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: NPM ci
        run: npm ci

      - name: build
        run: npm run build

      - name: test build output
        run: '[ -f ./lib/main.d.ts ] || exit 1'

      - name: upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: ${{ github.workspace }}/lib/**/*

  publish:
    needs: build
    runs-on: ubuntu-18.04
    if: github.event_name == 'release' && github.event.action == 'created'

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '12'

      - uses: actions/checkout@v2

      - name: download build artifact
        uses: actions/download-artifact@v1
        with:
          name: build
          path: ${{ github.workspace }}/lib/

      - name: test build output
        run: '[ -f ./lib/main.d.ts ] || exit 1'

      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
